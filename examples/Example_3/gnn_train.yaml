stage: edge_classifier
model: InteractionGNN
input_dir: MY_DATA_DIR/Example_3/metric_learning/ # Should contain the files used in training and inference
stage_dir: MY_DATA_DIR/Example_3/gnn/ # A directory to be created that will store logs, artifacts, and output data
project: CF_Example_3_GNN # Used in logging
gpus: 4
nodes: 1

# Dataset parameters
data_split: [80, 10, 10] # Number of [training, validation, testing] examples
input_cut: 0.5

# Truth and weighting parameters. Syntax is...
# Single value: track[key] == value
# List of 2 floats: value1 <= track[key] <= value2
# List with a string as the first value: First value defines the boolean test, the second value is a list or value. Boolean tests are: (in, not_in, is, is_not, within, not_within)
# All other tracks follow the default: If a true edge, weight=0. If a fake edge, weight=1.
weighting:
  - weight: 3.
    conditions:
      y: True
      pt: [1., .inf]
      nhits: [3, .inf]

# A list of hard cut conditions. Any hits not passing these conditions will be removed from the training and validation dataset.
# By definition, noise will not pass any of these cuts, so any hard cuts will remove noise.
hard_cuts:
  # pt: [1., .inf]

# Model parameters
edge_cut: 0.5
node_features: [x_r,  x_phi, x_z,  x_cell_count, x_cell_val, x_leta, x_lphi, x_lx, x_ly, x_lz, x_geta, x_gphi]
node_scales:   [1000, 3.14,  1000, 1,            1,          1,      1,      0.1,  1,    0.1,  1,      3.14]
hidden: 128
n_graph_iters: 8
nb_node_layer: 3
nb_edge_layer: 3
layernorm: True
batchnorm: False
aggregation: sum_mean_max
hidden_activation: SiLU
output_activation: Tanh

# Training parameters
warmup: 30
ratio: 5
scheduler: StepLR
lr: 0.0005
factor: 0.9
patience: 30
max_epochs: 200